{
  "$schema": "https://ui.shadcn.com/schema/registry.json",
  "name": "kelvinmai.io",
  "homepage": "https://kelvinmai.io",
  "items": [
    {
      "name": "color-picker",
      "type": "registry:component",
      "title": "Color Picker",
      "description": "A color picker component",
      "dependencies": [
        "react-colorful"
      ],
      "registryDependencies": [
        "input"
      ],
      "files": [
        {
          "path": "src/registry/default/ui/color-picker.tsx",
          "type": "registry:component"
        }
      ]
    },
    {
      "name": "floating-label-input",
      "type": "registry:component",
      "title": "Floating Label Input",
      "description": "Material UI floating label input",
      "dependencies": [
        "@radix-ui/react-label"
      ],
      "registryDependencies": [
        "input"
      ],
      "files": [
        {
          "path": "src/registry/default/ui/floating-label-input.tsx",
          "type": "registry:component"
        }
      ]
    },
    {
      "name": "theme-switch",
      "type": "registry:component",
      "title": "Theme Switch",
      "description": "Animated theme switch",
      "dependencies": [
        "next-themes",
        "lucide-react",
        "motion"
      ],
      "registryDependencies": [],
      "files": [
        {
          "path": "src/registry/default/ui/theme-switch.tsx",
          "type": "registry:component"
        }
      ]
    },
    {
      "name": "use-boolean",
      "type": "registry:hook",
      "title": "use-boolean",
      "description": "A hook to manage boolean states with common methods to set the value to true, false or toggle between them",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "src/registry/default/hooks/use-boolean.ts",
          "type": "registry:hook"
        }
      ]
    },
    {
      "name": "use-mounted",
      "type": "registry:hook",
      "title": "use-mounted",
      "description": "A hook that returns a boolean to check when the component has mounted",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "src/registry/default/hooks/use-mounted.ts",
          "type": "registry:hook"
        }
      ]
    },
    {
      "name": "use-interval",
      "type": "registry:hook",
      "title": "use-interval",
      "description": "A hook that executes a callback function at specified delays using the useInterval API",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "src/registry/default/hooks/use-interval.ts",
          "type": "registry:hook"
        }
      ]
    },
    {
      "name": "use-theme",
      "type": "registry:hook",
      "title": "use-theme",
      "description": "An extension to next-theme's use-theme hook to manage multiple shadcn color theme",
      "dependencies": [
        "next-themes"
      ],
      "registryDependencies": [],
      "files": [
        {
          "path": "src/registry/default/hooks/use-theme.ts",
          "type": "registry:hook"
        }
      ]
    },
    {
      "name": "use-timeout",
      "type": "registry:hook",
      "title": "use-interval",
      "description": "A hook that executes a callback function after a specified delay using the setTimeout API",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "src/registry/default/hooks/use-interval.ts",
          "type": "registry:hook"
        }
      ]
    },
    {
      "name": "use-unmount",
      "type": "registry:hook",
      "title": "use-unmount",
      "description": "A hook that runs a cleanup function when the component is unmounted",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "src/registry/default/hooks/use-unmount.ts",
          "type": "registry:hook"
        }
      ]
    }
  ]
}